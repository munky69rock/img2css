// Generated by CoffeeScript 1.3.3
(function() {
  var convert, getRGBAAvg, getRGBAList, img2css, readImage;

  if (!window.FileReader) {
    alert("sorry, your browser doesn't support file api.");
  }

  readImage = function(file) {
    var reader;
    reader = new FileReader();
    $(reader).bind('load', function(evt) {
      var image;
      image = new Image();
      image.src = evt.target.result;
      img2css(image);
    });
    reader.readAsDataURL(file);
  };

  convert = function() {
    var $file, file, filelist;
    $file = $('#file');
    filelist = $file.prop('files');
    if (filelist.length === 0) {
      alert('please select image file.');
      return;
    }
    file = filelist[0];
    if (file.type.indexOf('image') !== -1) {
      readImage(file);
    } else {
      alert("not image file: " + file.name);
    }
  };

  img2css = function(img) {
    var box_shadow, canvas, ctx, key, unit, x, y, _i, _len, _ref;
    canvas = $('#canvas').get(0);
    _ref = ['width', 'height'];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      key = _ref[_i];
      canvas[key] = img[key];
    }
    ctx = canvas.getContext('2d');
    ctx.drawImage(img, 1, 1);
    unit = 5;
    x = 0;
    y = 0;
    box_shadow = [];
    console.log('start');
    while (x < canvas.width) {
      while (y < canvas.height) {
        box_shadow.push("" + x + "px " + y + "px 4px 5px rgba(" + (getRGBAAvg(ctx.getImageData(x, y, 5, 5).data).join(',')) + ")");
        y += unit;
      }
      y = 0;
      x += unit;
    }
    console.log('complete');
    $('#view').css({
      boxShadow: box_shadow.join(',')
    });
    $('body').css({
      height: $('body').height() + img.height + 100
    });
  };

  getRGBAList = function(data) {
    var i, j, n, rgbaList, _i, _len;
    rgbaList = [];
    for (i = _i = 0, _len = data.length; _i < _len; i = ++_i) {
      n = data[i];
      j = Math.floor(i / 4);
      if (!rgbaList[j]) {
        rgbaList[j] = [];
      }
      rgbaList[j][i % 4] = n;
    }
    return rgbaList;
  };

  getRGBAAvg = function(data) {
    var i, list, rgba, _i, _j, _k, _len, _rgba;
    list = getRGBAList(data);
    rgba = [0, 0, 0, 0];
    for (_i = 0, _len = list.length; _i < _len; _i++) {
      _rgba = list[_i];
      for (i = _j = 0; _j <= 3; i = ++_j) {
        rgba[i] += _rgba[i];
      }
    }
    for (i = _k = 0; _k <= 3; i = ++_k) {
      rgba[i] = Math.floor(rgba[i] / list.length);
    }
    return rgba;
  };

  $(function() {
    return $('#convert').bind('click', convert);
  });

}).call(this);
